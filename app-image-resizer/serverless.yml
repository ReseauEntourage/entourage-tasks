service: resize-app-upload

frameworkVersion: '3'

custom:
  bucket_suffix:
    dev: 'development'
    staging: 'staging'
    prod: 'production'
  connection-string:
    dev: 'PREPROD_DATABASE_URL'
    staging: 'PREPROD_DATABASE_URL'
    prod: 'PRODUCTION_DATABASE_URL'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'staging'}
  region: eu-west-1
  logRetentionInDays: 30
  environment :
    watch_bucket: "entourage-images-${self:custom.bucket_suffix.${self:provider.stage}}"
    watch_dir: ""
    target_bucket: "entourage-images-${self:custom.bucket_suffix.${self:provider.stage}}"
    high_target_size: 800
    high_target_dir_prefix: "high/"
    medium_target_size: 400
    medium_target_dir_prefix: "medium/"
    default_target_dir_prefix: ""
    small_target_size: 60
    small_target_dir_prefix: "small/"
    dir_prefix: ""
    source_dir: "source/"
    request_string: ${self:functions.resize-app-upload.name}
    slacktoken: ${ssm:/ENTOURAGE_AWS_LAMBDA_APP_SLACK_TOKEN}
    channelId: 'C04JT8T0WNN'
    dbconnectionstring: ${ssm:/${self:custom.connection-string.${self:provider.stage}}}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: "*"

functions:
  resize-app-upload:
    name: resize-app-upload-${self:provider.stage}
    handler: handler.resizeAppUpload
    events:
      - s3:
          bucket: ${self:provider.environment.watch_bucket}
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: ${self:provider.environment.watch_dir}
